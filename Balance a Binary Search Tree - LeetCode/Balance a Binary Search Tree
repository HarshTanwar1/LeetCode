/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(vector<int>&in,TreeNode*&root){
        if(!root)
            return;

        inorder(in,root->left);
        in.push_back(root->val);
        inorder(in,root->right);
    }



    TreeNode* Balanced(vector<int>&in,int s,int e){
        if(s>e){
            return NULL;
        }

        int mid = (s+e)>>1;
        TreeNode* newNode = new TreeNode(in[mid]);
        newNode->left = Balanced(in,s,mid-1);
        newNode->right = Balanced(in,mid+1,e);

        return newNode;
    }


    TreeNode* balanceBST(TreeNode* root) {
        vector<int> in;
        inorder(in,root);
        return Balanced(in,0,in.size()-1);
    }
};
