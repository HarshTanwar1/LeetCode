class Solution {

class Car{
    public:
    int pos,spd;
    Car(int p,int sp):pos(p),spd(sp){};
};

static bool mycomp(Car&a,Car&b){
    return a.pos<b.pos;
}

public:
    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        vector<Car> cars;
        for(int i = 0;i<position.size();i++){
            Car SingleCar(position[i],speed[i]);
            cars.push_back(SingleCar);
        }
        sort(cars.begin(),cars.end(),mycomp);

        stack<float> st;
        
        for(auto c : cars){
            float time = (target-c.pos)/((float)c.spd);
            while(!st.empty() && time>=st.top()){
                st.pop();
            }
            st.push(time);
        }
        return st.size();
    }
};
