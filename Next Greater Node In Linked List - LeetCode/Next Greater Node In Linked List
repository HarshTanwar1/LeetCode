/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    vector<int> nextLargerNodes(ListNode* head) {

        vector<int> arr;
        while(head){
            arr.push_back(head->val);
            head = head->next;
        }


        // storing the index 
        stack<int> st;
        vector<int> ans(arr.size());

        for(int i=0;i<arr.size();i++){

            while(!st.empty() && arr[i] > arr[st.top()]){
                ans[st.top()] = arr[i];
                st.pop();
            }
            st.push(i);
        }

        // remaining indices elements of stack already contains 0, because vector initialised by 0

        return ans;
        
    }
};
