class Solution {
public:

    void comb2helper(vector<int>&candidates,int target,vector<vector<int>>&ans,vector<int>&v,int index){
        // BASE CASE 
        if(target < 0) return ;
        if(target == 0) {
            ans.push_back(v);
            return ;
        }

        // RE LOGIC
        for(int i = index;i<candidates.size();++i){
            if(i>index && candidates[i] == candidates[i-1]){
                continue;
            }
            v.push_back(candidates[i]);
            comb2helper(candidates,target-candidates[i],ans,v,i+1);
            v.pop_back();
        }


    }

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>>ans;
        vector<int>v;
        comb2helper(candidates,target,ans,v,0);
        return ans;
    }
};
