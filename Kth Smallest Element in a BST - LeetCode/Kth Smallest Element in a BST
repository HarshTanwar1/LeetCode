/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int&k) {
        //   Base case
        if(!root)
            return -1;

        // if ans is present in left
        int leftAns = kthSmallest(root->left,k);
        if(leftAns != -1){
            return leftAns;
        }


        // if current node is the answer
        --k;
        if(k == 0){
            return root->val;
        }

        // if ans is present in right
        int rightAns = kthSmallest(root->right,k);
        return rightAns;
    }
};
