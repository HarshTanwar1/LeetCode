/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve(TreeNode*&root,long int ub,long int lb){
        if(!root)
            return true;

        if(root->val < ub && root->val > lb){
            bool leftBST = solve(root->left,root->val,lb);
            bool rightBST = solve(root->right,ub,root->val);
            return (leftBST && rightBST);
        }
        else{
            return false;
        }
    }


    bool isValidBST(TreeNode* root) {
        long int upperBound = LONG_MAX;
        long int lowerBound = LONG_MIN;
        bool valid = solve(root,upperBound,lowerBound);
        return valid;
    }
};
