class Solution {
public:
    string reorganizeString(string s) {
        int hash[26] = {0};

        // count hash
        for(int i = 0;i<s.length();i++){
            hash[s[i] - 'a']++;
        }

        // find most occurant element 
        int Most_Occurant = INT_MIN;
        char Most_Occ_char ; 
        for(int i = 0;i<26;i++){
            if(hash[i] > Most_Occurant){
                    Most_Occurant = hash[i];
                    Most_Occ_char = i+'a';
            }
        }

        // place the most occurant character
        int index = 0;
        while(Most_Occurant > 0 && index < s.length()){
            s[index] = Most_Occ_char;
            Most_Occurant--;
            index += 2;
        }

        // if there is still most occurant character ramaining , so it means we not placed in one go
        if(Most_Occurant != 0){
            return "";
        }

        hash[Most_Occ_char - 'a'] = 0;

        // place other character
        for(int i = 0;i<26;i++){
            while(hash[i] > 0){
                index = index>=s.length() ? 1 : index;
                s[index] = i + 'a';
                hash[i]--;
                index += 2;
            }
        }

        return s;
    }
};
