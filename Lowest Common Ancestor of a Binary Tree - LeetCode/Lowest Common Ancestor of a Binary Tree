/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        // check NULL
        if(root == nullptr)
        return NULL;

        // check p or q
        if(root->val == p->val || root->val == q->val)
        return root;

        // left check
        TreeNode* left = lowestCommonAncestor(root->left,p,q);

        // right check
        TreeNode* right = lowestCommonAncestor(root->right,p,q);

        // answer per check
        if(left == NULL && right == NULL)
        return NULL;
        else if(left != NULL && right == NULL)
        return left;
        else if(left == NULL && right != NULL)
        return right;
        else
        return root;
    }
};
