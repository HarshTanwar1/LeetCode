class Solution {
public:
    class compare{
        public:
            bool operator()(pair<int,int>&a,pair<int,int>&b){
                int distA = a.first*a.first + a.second*a.second;
                int distB = b.first*b.first + b.second*b.second;

                return distA > distB;
            }
    };


    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
        priority_queue<pair<int,int>, vector<pair<int,int>>,compare> minHeap;

        for(auto i : points){
            minHeap.push({i[0],i[1]});
        }

        while(!minHeap.empty() && k--){
            auto&ele = minHeap.top();
            ans.push_back({ele.first,ele.second});
            minHeap.pop();
        }

        return ans;
    }
};
